package {{invokerPackage}}

import akka.http.scaladsl.server.Route
{{#apiInfo}}{{#apis}}{{#operations}}import {{package}}.{{classname}}
{{/operations}}{{/apis}}{{/apiInfo}}
import akka.http.scaladsl.server.Directives._
import akka.actor.ActorSystem
import akka.http.scaladsl.model.{ContentTypes, HttpEntity}

import scala.concurrent.duration._

class Controller({{#apiInfo}}{{#apis}}{{#operations}}{{classVarName}}: {{classname}}{{^-last}}, {{/-last}}{{/operations}}{{/apis}}{{/apiInfo}})(implicit system: ActorSystem) {
val interfaceVersion :String= buildinfo.BuildInfo.interfaceVersion
private val strictnessTimeout:FiniteDuration = FiniteDuration({{entityStrictnessTimeout}}, SECONDS)

/**
* Exposes build information of this project.
*/
def getBuildInfo: Route =
path("{{projectName}}" / "build-info") {
get {
complete(HttpEntity(ContentTypes.`application/json`, buildinfo.BuildInfo.toJson))
}
}

lazy val routes: Route = getBuildInfo ~ pathPrefix("{{projectName}}" / interfaceVersion) {
toStrictEntity(strictnessTimeout) {

{{#apiInfo}}{{#apis}}{{#operations}}{{classVarName}}.route {{^-last}} ~ {{/-last}}{{/operations}}{{/apis}}{{/apiInfo}}
}
} ~ getFromResourceDirectory("swagger-ui")

}


