akka {
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  actor {
      serializers {
          party-added = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyAddedSerializer"
          party-updated = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyUpdatedSerializer"
          party-deleted = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyDeletedSerializer"
          party-relationship-added = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipAddedSerializer"
          party-relationship-deleted = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipDeletedSerializer"
          party-relationship-rejected = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipRejectedSerializer"
          party-relationship-confirmed = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipConfirmedSerializer"
          party-relationship-suspended = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipSuspendedSerializer"
          party-relationship-activated = "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipActivatedSerializer"
          token-added = "it.pagopa.interop.partymanagement.model.persistence.serializer.TokenAddedSerializer"
          state = "it.pagopa.interop.partymanagement.model.persistence.serializer.StateSerializer"
          attributes-added = "it.pagopa.interop.partymanagement.model.persistence.serializer.AttributesAddedSerializer"
      }
      serialization-identifiers {
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyAddedSerializer" = 100000
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyDeletedSerializer" = 100001
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyUpdatedSerializer" = 100002
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipAddedSerializer" = 200000
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipDeletedSerializer" = 200001
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipConfirmedSerializer" = 200002
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipSuspendedSerializer" = 200003
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipActivatedSerializer" = 200004
          "it.pagopa.interop.partymanagement.model.persistence.serializer.PartyRelationshipRejectedSerializer" = 200005
          "it.pagopa.interop.partymanagement.model.persistence.serializer.TokenAddedSerializer" = 300000
          "it.pagopa.interop.partymanagement.model.persistence.serializer.StateSerializer" = 400000
          "it.pagopa.interop.partymanagement.model.persistence.serializer.AttributesAddedSerializer" = 500000
      }
      serialization-bindings {
          "it.pagopa.interop.partymanagement.model.persistence.PartyAdded" = party-added
          "it.pagopa.interop.partymanagement.model.persistence.PartyUpdated" = party-updated
          "it.pagopa.interop.partymanagement.model.persistence.PartyDeleted" = party-deleted
          "it.pagopa.interop.partymanagement.model.persistence.PartyRelationshipAdded" = party-relationship-added
          "it.pagopa.interop.partymanagement.model.persistence.PartyRelationshipConfirmed" = party-relationship-confirmed
          "it.pagopa.interop.partymanagement.model.persistence.PartyRelationshipRejected" = party-relationship-rejected
          "it.pagopa.interop.partymanagement.model.persistence.PartyRelationshipDeleted" = party-relationship-deleted
          "it.pagopa.interop.partymanagement.model.persistence.PartyRelationshipSuspended" = party-relationship-suspended
          "it.pagopa.interop.partymanagement.model.persistence.PartyRelationshipActivated" = party-relationship-activated
          "it.pagopa.interop.partymanagement.model.persistence.TokenAdded" = token-added
          "it.pagopa.interop.partymanagement.model.persistence.State" = state
          "it.pagopa.interop.partymanagement.model.persistence.AttributesAdded" = attributes-added
      }
    }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  http {
    bind-hostname = 0.0.0.0
    route-providers-read-only = false
  }

  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
  }

  health-checks {
    readiness-checks {
      ready = "it.pagopa.interop.partymanagement.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.interop.partymanagement.server.impl.LiveCheck"
    }
  }
}