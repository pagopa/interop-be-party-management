akka {
  loglevel = "ERROR"
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  actor {
      serializers {
          party-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer"
          party-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer"
          party-relationship-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipAddedSerializer"
          party-relationship-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipDeletedSerializer"
          party-relationship-confirmed = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipConfirmedSerializer"
          token-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer"
          token-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenDeletedSerializer"
          state = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer"
          attributes-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.AttributesAddedSerializer"
      }
      serialization-identifiers {
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer" = 100000
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer" = 100001
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipAddedSerializer" = 200000
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipDeletedSerializer" = 200001
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipConfirmedSerializer" = 200002
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer" = 300000
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenDeletedSerializer" = 300001
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer" = 400000
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.AttributesAddedSerializer" = 500000
      }
      serialization-bindings {
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyAdded" = party-added
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyDeleted" = party-deleted
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationShipAdded" = party-relationship-added
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationShipConfirmed" = party-relationship-confirmed
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationShipDeleted" = party-relationship-deleted
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenAdded" = token-added
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenDeleted" = token-deleted
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.State" = state
          "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.AttributesAdded" = attributes-added
      }
    }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
      required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
    }
  }
}

akka.management {
  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.LiveCheck"
    }
  }
}

kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
  }
}

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.instrumentation.akka.http {
  server.metrics {
    enabled = yes
  }
}

kamon.instrumentation.akka.http {
  server {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }

  client {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }
}

uservice-party-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  persistence = "memory"
  port = 8088
}
