include "persistence-inmem"
# include "persistence-jdbc"

akka {
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  actor {
    serializers {
      party-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer"
      party-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer"
      party-relationship-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipAddedSerializer"
      party-relationship-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipDeletedSerializer"
      party-relationship-rejected = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipRejectedSerializer"
      party-relationship-confirmed = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipConfirmedSerializer"
      party-relationship-suspended = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipSuspendedSerializer"
      party-relationship-activated = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipActivatedSerializer"
      token-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer"
      state = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer"
      attributes-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.AttributesAddedSerializer"
    }
    serialization-identifiers {
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer" = 100000
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer" = 100001
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipAddedSerializer" = 200000
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipDeletedSerializer" = 200001
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipConfirmedSerializer" = 200002
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipSuspendedSerializer" = 200003
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipActivatedSerializer" = 200004
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipRejectedSerializer" = 200005
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer" = 300000
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer" = 400000
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.AttributesAddedSerializer" = 500000
    }
    serialization-bindings {
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyAdded" = party-added
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyDeleted" = party-deleted
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipAdded" = party-relationship-added
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipConfirmed" = party-relationship-confirmed
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipRejected" = party-relationship-rejected
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipDeleted" = party-relationship-deleted
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipSuspended" = party-relationship-suspended
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipActivated" = party-relationship-activated
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenAdded" = token-added
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.State" = state
      "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.AttributesAdded" = attributes-added
    }
  }

  remote.artery {
    canonical.port = 2552
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = ["akka://pdnd-interop-uservice-party-management@127.0.0.1:2552"]
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  http {
    bind-hostname = 0.0.0.0
    route-providers-read-only = false
  }

  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.LiveCheck"
    }
  }
}

party-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  port = 8088
  jwt {
    audience = [ ${?MAIN_AUDIENCE} ]
  }
  storage {
    container = "local"
  }
  token-validity-hours = ${TOKEN_VALIDITY_HOURS}
}

pdnd-interop-commons {
  storage {
    type = "File"
    endpoint = "local"
    application {
      id = "local"
      secret = "l0c4l"
    }
  }
  jwt {
    public-keys {
      url = ${WELL_KNOWN_URL}
    }
  }
}
