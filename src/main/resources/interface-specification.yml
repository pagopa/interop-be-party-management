openapi: 3.0.3
info:
  title: Party Management Micro Service
  description: This service is the party manager
  version: 0.0.1
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: https://localhost:8088/pdnd-interop-uservice-party-management/0.0.1
    description: This service is the party manager
security:
  - bearerAuth: [ ]
tags:
  - name: party
    description: Manipulate party information
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /persons/{taxCode}:
    head:
      security:
        - bearerAuth: [ ]
      tags:
        - party
      summary: Verify if a person exists for a given taxCode
      description: Return ok
      operationId: existsPerson
      parameters:
        - name: taxCode
          in: path
          description: The fiscal code of the Person to check
          required: true
          schema:
            description: Il codice fiscale.
            example: RSSMRA75L01H501A
            maxLength: 16
            minLength: 11
            pattern: '^(?:(?:[B-DF-HJ-NP-TV-Z]|[AEIOU])[AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$'
            type: string
      responses:
        '200':
          description: Person exists
        '404':
          description: Person not found
  /persons:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - party
      summary: Create a new person
      description: Return ok
      operationId: createPerson
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /intitutions:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - party
      summary: Create an institution
      description: Return ok
      operationId: createInstitution
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Institution'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Institution'
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /intitutions/{institutionId}:
    head:
      security:
        - bearerAuth: [ ]
      tags:
        - party
      summary: Verify if an institution exists for a given institutionId
      description: Return ok
      operationId: existsInstitution
      parameters:
        - name: institutionId
          in: path
          description: The ID of the Institution to check
          required: true
          schema:
            description: to be defined
            type: string
            example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
            maxLength: 36
            format: uuid
      responses:
        '200':
          description: successful operation
        '404':
          description: Institution not found

  /persons/{taxCode}/institutions/{institutionId}:
    post:
      security:
        - bearerAuth: [ ]
      tags:
        - party
      summary: Create a new reletion ship between a Person and an Institutions
      description: Return ok
      operationId: createRelationShip
      parameters:
        - name: taxCode
          in: path
          description: The fiscal code of the Person to return
          required: true
          schema:
            description: Il codice fiscale.
            example: RSSMRA75L01H501A
            maxLength: 16
            minLength: 11
            pattern: '^(?:(?:[B-DF-HJ-NP-TV-Z]|[AEIOU])[AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$'
            type: string
        - name: institutionId
          in: path
          description: The ID of the Institution to return
          required: true
          schema:
            description: to be defined
            type: string
            example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
            maxLength: 36
            format: uuid
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyRelationShip'
  /status:
    get:
      security:
        - bearerAuth: [ ]
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Party:
      type: object
      properties:
        id:
          type: string
          example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
          maxLength: 36
          format: uuid
        name:
          type: string
          example: John
          format: name
          maxLength: 12
        phone:
          type: string
          example: '333112233445'
          format: phone
          maxLength: 12
        email:
          example: email@mail.org
          maxLength: 20
          format: email
          type: string
        taxCode:
          description: Il codice fiscale.
          example: RSSMRA75L01H501A
          maxLength: 16
          minLength: 11
          pattern: '^(?:(?:[B-DF-HJ-NP-TV-Z]|[AEIOU])[AEIOU][AEIOUX]|[B-DF-HJ-NP-TV-Z]{2}[A-Z]){2}[\dLMNP-V]{2}(?:[A-EHLMPR-T](?:[04LQ][1-9MNP-V]|[1256LMRS][\dLMNP-V])|[DHPS][37PT][0L]|[ACELMRT][37PT][01LM])(?:[A-MZ][1-9MNP-V][\dLMNP-V]{2}|[A-M][0L](?:[1-9MNP-V][\dLMNP-V]|[0L][1-9MNP-V]))[A-Z]$'
          type: string
        start:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        end:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
      required:
        - id
        - name
        - type
        - taxCode
        - start
      additionalProperties: false
    Person:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          required:
            - surname
          additionalProperties: false
          properties:
            surname:
              type: string
              example: Doe
              format: surname
              maxLength: 12
    Institution:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          properties:
            ipaCod:
              example: age
              maxLength: 3
              pattern: '[a-z]{2,3}'
              type: string
            manager:
              example: Mario Rossi
              maxLength: 20
              pattern: ^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$
              type: string
            pec:
              example: email@pec.mail.org
              maxLength: 20
              format: email
              type: string
          required:
            - pec
            - ipaCod
            - manager
          additionalProperties: false
    PartyRelationShip:
      type: object
      properties:
        from:
          type: string
          example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
          maxLength: 36
          format: uuid
        to:
          type: string
          example: 97c0f418-bcb3-48d4-825a-fe8b29ae68e5
          maxLength: 36
          format: uuid
        relationShipType:
          type: string
          enum: [ DelegatedBy, ManagerOf, PartOf ]
        start:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
        end:
          type: string
          format: date-time
          example: 2017-07-21T17:32:28Z
      additionalProperties: false
      required:
        - from
        - to
        - relationShipType
        - start
    ErrorResponse:
      properties:
        detail:
          description:
            A human readable explanation specific to this occurrence of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: ^.{0,1024}$
          type: string
        status:
          description:
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description:
            A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: ^[ -~]{0,64}$
          type: string
      additionalProperties: false
      required:
        - status
        - title
  securitySchemes:
    bearerAuth:
      type: http
      description: A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).
      scheme: bearer
      bearerFormat: JWT