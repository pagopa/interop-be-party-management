akka {
  loglevel = "ERROR"
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  actor {
    serializers {
        party-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer"
        party-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer"
        party-relationship-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipAddedSerializer"
        party-relationship-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipDeletedSerializer"
        party-relationship-confirmed = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipConfirmedSerializer"
        token-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer"
        token-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenDeletedSerializer"
        state = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer"
        attributes-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.AttributesAddedSerializer"
      }
    serialization-identifiers {
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer" = 100000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer" = 100001
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipAddedSerializer" = 200000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipDeletedSerializer" = 200001
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationshipConfirmedSerializer" = 200002
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer" = 300000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenDeletedSerializer" = 300001
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer" = 400000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.AttributesAddedSerializer" = 500000
      }
    serialization-bindings {
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyAdded" = party-added
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyDeleted" = party-deleted
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipAdded" = party-relationship-added
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipConfirmed" = party-relationship-confirmed
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationshipDeleted" = party-relationship-deleted
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenAdded" = token-added
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenDeleted" = token-deleted
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.State" = state
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.AttributesAdded" = attributes-added
      }
    }

  remote.artery {
    canonical.port = 2552
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = ["akka://pdnd-interop-uservice-party-management@127.0.0.1:2552"]
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.LiveCheck"
    }
  }
}

kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
  }
}

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.instrumentation.akka.http {
  server.metrics {
    enabled = yes
  }
}

kamon.instrumentation.akka.http {
  server {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }

  client {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }
}

uservice-party-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  persistence = "memory"
  port = 8088
}
