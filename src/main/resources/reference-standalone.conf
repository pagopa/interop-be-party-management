akka {
  loglevel = "ERROR"
  actor.provider = cluster
  actor.warn-about-java-serializer-usage = on
  actor.allow-java-serialization = on
  coordinated-shutdown.exit-jvm = on

  actor {
      serializers {
        party-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer"
        party-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer"
        party-relationship-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipAddedSerializer"
        party-relationship-deleted = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipDeletedSerializer"
        token-added = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer"
        token-consumed = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenConsumedSerializer"
        token-invalidated = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenInvalidatedSerializer"
        state = "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer"
      }
      serialization-identifiers {
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyAddedSerializer" = 100000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyDeletedSerializer" = 100001
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipAddedSerializer" = 200000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.PartyRelationShipDeletedSerializer" = 200001
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenAddedSerializer" = 300000
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenConsumedSerializer" = 300001
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.TokenInvalidatedSerializer" = 300002
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.serializer.StateSerializer" = 400000
      }
      serialization-bindings {
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyAdded" = party-added
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyDeleted" = party-deleted
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationShipAdded" = party-relationship-added
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.PartyRelationShipDeleted" = party-relationship-deleted
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenAdded" = token-added
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenConsumed" = token-consumed
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.TokenInvalidated" = token-invalidated
        "it.pagopa.pdnd.interop.uservice.partymanagement.model.persistence.State" = state
      }
    }

  remote.artery {
    canonical.port = 2552
    canonical.hostname = 127.0.0.1
  }

  cluster {
    seed-nodes = ["akka://pdnd-interop-uservice-party-management@127.0.0.1:2552"]
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      number-of-shards = 60 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  persistence {
    journal.plugin = "akka.persistence.journal.inmem"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  }

  typed {
    stash-capacity = 200000
  }
}

akka.management {
  health-checks {
    readiness-checks {
      ready = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.HealthCheck"
    }
    liveness-checks {
      live = "it.pagopa.pdnd.interop.uservice.partymanagement.server.impl.LiveCheck"
    }
  }
}

kamon.prometheus {
  embedded-server {
    hostname = 0.0.0.0
  }
}

kamon.instrumentation.akka.http {
  server {
    propagation {
      enabled = yes
      channel = default
    }
  }

  client {
    propagation {
      enabled = yes
      channel = default
    }
  }
}

kamon.instrumentation.akka.http {
  server.metrics {
    enabled = yes
  }
}

kamon.instrumentation.akka.http {
  server {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }

  client {
    tracing {
      enabled = yes
      span-metrics = on
    }
  }
}

uservice-party-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
}
